SQL Monitoring Script
Name: query_monitoring.sql
Purpose: Contains the original query and the EXPLAIN ANALYZE statements before and after optimization.
-- query_monitoring.sql

-- Baseline performance (before index)
EXPLAIN ANALYZE
SELECT *
FROM bookings
WHERE user_id = 1234
  AND check_in BETWEEN '2024-06-01' AND '2024-06-30';

-- Optimization: create index
CREATE INDEX IF NOT EXISTS idx_user_date ON bookings(user_id, check_in);

-- Post-optimization performance check
EXPLAIN ANALYZE
SELECT *
FROM bookings
WHERE user_id = 1234
  AND check_in BETWEEN '2024-06-01' AND '2024-06-30';

Performance Report
Name: performance_report.md
Purpose: Summarizes the changes and results clearly.
# Database Performance Monitoring Report

## Objective
Continuously monitor and refine database performance by analyzing query execution plans.

## Tool Used
- `EXPLAIN ANALYZE` (PostgreSQL)

## Query Monitored
```sql
SELECT *
FROM bookings
WHERE user_id = 1234
  AND check_in BETWEEN '2024-06-01' AND '2024-06-30';
Observations

    Initial Execution Plan: Seq Scan (slow performance)

    Identified missing index on user_id, check_in

    Query took ~150ms on 100K+ rows
Optimization
CREATE INDEX idx_user_date ON bookings(user_id, check_in);
CREATE INDEX idx_user_date ON bookings(user_id, check_in);

Results

    Index Scan used post-optimization

    Execution time dropped to ~30ms


